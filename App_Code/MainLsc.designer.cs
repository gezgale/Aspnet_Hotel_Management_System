#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HotelOnline")]
public partial class MainLscDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttblCounter(tblCounter instance);
  partial void UpdatetblCounter(tblCounter instance);
  partial void DeletetblCounter(tblCounter instance);
  partial void InserttblCountryCity(tblCountryCity instance);
  partial void UpdatetblCountryCity(tblCountryCity instance);
  partial void DeletetblCountryCity(tblCountryCity instance);
  partial void InserttblCountryCode(tblCountryCode instance);
  partial void UpdatetblCountryCode(tblCountryCode instance);
  partial void DeletetblCountryCode(tblCountryCode instance);
  partial void InserttblCustomerPayment(tblCustomerPayment instance);
  partial void UpdatetblCustomerPayment(tblCustomerPayment instance);
  partial void DeletetblCustomerPayment(tblCustomerPayment instance);
  partial void InserttblEECus(tblEECus instance);
  partial void UpdatetblEECus(tblEECus instance);
  partial void DeletetblEECus(tblEECus instance);
  partial void InserttblLink(tblLink instance);
  partial void UpdatetblLink(tblLink instance);
  partial void DeletetblLink(tblLink instance);
  partial void InserttblMonthHa(tblMonthHa instance);
  partial void UpdatetblMonthHa(tblMonthHa instance);
  partial void DeletetblMonthHa(tblMonthHa instance);
  partial void InserttblRezerveRoom(tblRezerveRoom instance);
  partial void UpdatetblRezerveRoom(tblRezerveRoom instance);
  partial void DeletetblRezerveRoom(tblRezerveRoom instance);
  partial void InserttblRezerveTicket(tblRezerveTicket instance);
  partial void UpdatetblRezerveTicket(tblRezerveTicket instance);
  partial void DeletetblRezerveTicket(tblRezerveTicket instance);
  partial void InserttblRoomFloor(tblRoomFloor instance);
  partial void UpdatetblRoomFloor(tblRoomFloor instance);
  partial void DeletetblRoomFloor(tblRoomFloor instance);
  partial void InserttblRoom(tblRoom instance);
  partial void UpdatetblRoom(tblRoom instance);
  partial void DeletetblRoom(tblRoom instance);
  partial void InserttblRoomState(tblRoomState instance);
  partial void UpdatetblRoomState(tblRoomState instance);
  partial void DeletetblRoomState(tblRoomState instance);
  partial void InserttblRoomType(tblRoomType instance);
  partial void UpdatetblRoomType(tblRoomType instance);
  partial void DeletetblRoomType(tblRoomType instance);
  partial void InserttblServicesDef(tblServicesDef instance);
  partial void UpdatetblServicesDef(tblServicesDef instance);
  partial void DeletetblServicesDef(tblServicesDef instance);
  partial void InserttblUser(tblUser instance);
  partial void UpdatetblUser(tblUser instance);
  partial void DeletetblUser(tblUser instance);
  partial void InserttblUserType(tblUserType instance);
  partial void UpdatetblUserType(tblUserType instance);
  partial void DeletetblUserType(tblUserType instance);
  #endregion
	
	public MainLscDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HotelConString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MainLscDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MainLscDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MainLscDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MainLscDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<VIEW1> VIEW1s
	{
		get
		{
			return this.GetTable<VIEW1>();
		}
	}
	
	public System.Data.Linq.Table<XtblRoom> XtblRooms
	{
		get
		{
			return this.GetTable<XtblRoom>();
		}
	}
	
	public System.Data.Linq.Table<XtblCountOfPerGroup> XtblCountOfPerGroups
	{
		get
		{
			return this.GetTable<XtblCountOfPerGroup>();
		}
	}
	
	public System.Data.Linq.Table<XtblCustomerPayment> XtblCustomerPayments
	{
		get
		{
			return this.GetTable<XtblCustomerPayment>();
		}
	}
	
	public System.Data.Linq.Table<XtblCustomerTookedRoom> XtblCustomerTookedRooms
	{
		get
		{
			return this.GetTable<XtblCustomerTookedRoom>();
		}
	}
	
	public System.Data.Linq.Table<XtblReserverForCombo> XtblReserverForCombos
	{
		get
		{
			return this.GetTable<XtblReserverForCombo>();
		}
	}
	
	public System.Data.Linq.Table<XtblRoomFloorType> XtblRoomFloorTypes
	{
		get
		{
			return this.GetTable<XtblRoomFloorType>();
		}
	}
	
	public System.Data.Linq.Table<tblCounter> tblCounters
	{
		get
		{
			return this.GetTable<tblCounter>();
		}
	}
	
	public System.Data.Linq.Table<tblCountryCity> tblCountryCities
	{
		get
		{
			return this.GetTable<tblCountryCity>();
		}
	}
	
	public System.Data.Linq.Table<tblCountryCode> tblCountryCodes
	{
		get
		{
			return this.GetTable<tblCountryCode>();
		}
	}
	
	public System.Data.Linq.Table<tblCustomerPayment> tblCustomerPayments
	{
		get
		{
			return this.GetTable<tblCustomerPayment>();
		}
	}
	
	public System.Data.Linq.Table<tblEECus> tblEECus
	{
		get
		{
			return this.GetTable<tblEECus>();
		}
	}
	
	public System.Data.Linq.Table<tblLink> tblLinks
	{
		get
		{
			return this.GetTable<tblLink>();
		}
	}
	
	public System.Data.Linq.Table<tblMonthHa> tblMonthHas
	{
		get
		{
			return this.GetTable<tblMonthHa>();
		}
	}
	
	public System.Data.Linq.Table<tblRezerveRoom> tblRezerveRooms
	{
		get
		{
			return this.GetTable<tblRezerveRoom>();
		}
	}
	
	public System.Data.Linq.Table<tblRezerveTicket> tblRezerveTickets
	{
		get
		{
			return this.GetTable<tblRezerveTicket>();
		}
	}
	
	public System.Data.Linq.Table<tblRoomFloor> tblRoomFloors
	{
		get
		{
			return this.GetTable<tblRoomFloor>();
		}
	}
	
	public System.Data.Linq.Table<tblRoom> tblRooms
	{
		get
		{
			return this.GetTable<tblRoom>();
		}
	}
	
	public System.Data.Linq.Table<tblRoomState> tblRoomStates
	{
		get
		{
			return this.GetTable<tblRoomState>();
		}
	}
	
	public System.Data.Linq.Table<tblRoomType> tblRoomTypes
	{
		get
		{
			return this.GetTable<tblRoomType>();
		}
	}
	
	public System.Data.Linq.Table<tblServicesDef> tblServicesDefs
	{
		get
		{
			return this.GetTable<tblServicesDef>();
		}
	}
	
	public System.Data.Linq.Table<tblUser> tblUsers
	{
		get
		{
			return this.GetTable<tblUser>();
		}
	}
	
	public System.Data.Linq.Table<tblUserType> tblUserTypes
	{
		get
		{
			return this.GetTable<tblUserType>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIEW1")]
public partial class VIEW1
{
	
	private System.Nullable<int> _TedadeKarbaran;
	
	private System.Nullable<int> _TedadeOtaghHa;
	
	private System.Nullable<int> _OtaghhaieRezerveShode;
	
	private System.Nullable<int> _OtaghhaieTahvilShodeh;
	
	private System.Nullable<int> _OtaghhaieAzad;
	
	private System.Nullable<decimal> _DariaftieKol;
	
	private System.Nullable<double> _BazDidha;
	
	public VIEW1()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TedadeKarbaran", DbType="Int")]
	public System.Nullable<int> TedadeKarbaran
	{
		get
		{
			return this._TedadeKarbaran;
		}
		set
		{
			if ((this._TedadeKarbaran != value))
			{
				this._TedadeKarbaran = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TedadeOtaghHa", DbType="Int")]
	public System.Nullable<int> TedadeOtaghHa
	{
		get
		{
			return this._TedadeOtaghHa;
		}
		set
		{
			if ((this._TedadeOtaghHa != value))
			{
				this._TedadeOtaghHa = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtaghhaieRezerveShode", DbType="Int")]
	public System.Nullable<int> OtaghhaieRezerveShode
	{
		get
		{
			return this._OtaghhaieRezerveShode;
		}
		set
		{
			if ((this._OtaghhaieRezerveShode != value))
			{
				this._OtaghhaieRezerveShode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtaghhaieTahvilShodeh", DbType="Int")]
	public System.Nullable<int> OtaghhaieTahvilShodeh
	{
		get
		{
			return this._OtaghhaieTahvilShodeh;
		}
		set
		{
			if ((this._OtaghhaieTahvilShodeh != value))
			{
				this._OtaghhaieTahvilShodeh = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtaghhaieAzad", DbType="Int")]
	public System.Nullable<int> OtaghhaieAzad
	{
		get
		{
			return this._OtaghhaieAzad;
		}
		set
		{
			if ((this._OtaghhaieAzad != value))
			{
				this._OtaghhaieAzad = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DariaftieKol", DbType="Money")]
	public System.Nullable<decimal> DariaftieKol
	{
		get
		{
			return this._DariaftieKol;
		}
		set
		{
			if ((this._DariaftieKol != value))
			{
				this._DariaftieKol = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BazDidha", DbType="Float")]
	public System.Nullable<double> BazDidha
	{
		get
		{
			return this._BazDidha;
		}
		set
		{
			if ((this._BazDidha != value))
			{
				this._BazDidha = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XtblRooms")]
public partial class XtblRoom
{
	
	private int _RoomID;
	
	private string _RoomNumber;
	
	private System.Nullable<int> _RoomType;
	
	private string _RoomTypeDescription;
	
	private System.Nullable<int> _RoomBed;
	
	private System.Nullable<decimal> _PriceOfPerNight;
	
	private System.Nullable<int> _RoomStatuse;
	
	private string _RoomStatuseDesc;
	
	private System.Nullable<short> _RoomFloorID;
	
	private string _RoomFloorTitle;
	
	public XtblRoom()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int NOT NULL")]
	public int RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				this._RoomID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(50)")]
	public string RoomNumber
	{
		get
		{
			return this._RoomNumber;
		}
		set
		{
			if ((this._RoomNumber != value))
			{
				this._RoomNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="Int")]
	public System.Nullable<int> RoomType
	{
		get
		{
			return this._RoomType;
		}
		set
		{
			if ((this._RoomType != value))
			{
				this._RoomType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTypeDescription", DbType="NVarChar(100)")]
	public string RoomTypeDescription
	{
		get
		{
			return this._RoomTypeDescription;
		}
		set
		{
			if ((this._RoomTypeDescription != value))
			{
				this._RoomTypeDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomBed", DbType="Int")]
	public System.Nullable<int> RoomBed
	{
		get
		{
			return this._RoomBed;
		}
		set
		{
			if ((this._RoomBed != value))
			{
				this._RoomBed = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfPerNight", DbType="Money")]
	public System.Nullable<decimal> PriceOfPerNight
	{
		get
		{
			return this._PriceOfPerNight;
		}
		set
		{
			if ((this._PriceOfPerNight != value))
			{
				this._PriceOfPerNight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomStatuse", DbType="Int")]
	public System.Nullable<int> RoomStatuse
	{
		get
		{
			return this._RoomStatuse;
		}
		set
		{
			if ((this._RoomStatuse != value))
			{
				this._RoomStatuse = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomStatuseDesc", DbType="NVarChar(50)")]
	public string RoomStatuseDesc
	{
		get
		{
			return this._RoomStatuseDesc;
		}
		set
		{
			if ((this._RoomStatuseDesc != value))
			{
				this._RoomStatuseDesc = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorID", DbType="SmallInt")]
	public System.Nullable<short> RoomFloorID
	{
		get
		{
			return this._RoomFloorID;
		}
		set
		{
			if ((this._RoomFloorID != value))
			{
				this._RoomFloorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RoomFloorTitle
	{
		get
		{
			return this._RoomFloorTitle;
		}
		set
		{
			if ((this._RoomFloorTitle != value))
			{
				this._RoomFloorTitle = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XtblCountOfPerGroup")]
public partial class XtblCountOfPerGroup
{
	
	private short _RoomFloorID;
	
	private string _RoomFloorTitle;
	
	private System.Nullable<int> _CountOfUse;
	
	public XtblCountOfPerGroup()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorID", DbType="SmallInt NOT NULL")]
	public short RoomFloorID
	{
		get
		{
			return this._RoomFloorID;
		}
		set
		{
			if ((this._RoomFloorID != value))
			{
				this._RoomFloorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RoomFloorTitle
	{
		get
		{
			return this._RoomFloorTitle;
		}
		set
		{
			if ((this._RoomFloorTitle != value))
			{
				this._RoomFloorTitle = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOfUse", DbType="Int")]
	public System.Nullable<int> CountOfUse
	{
		get
		{
			return this._CountOfUse;
		}
		set
		{
			if ((this._CountOfUse != value))
			{
				this._CountOfUse = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XtblCustomerPayments")]
public partial class XtblCustomerPayment
{
	
	private long _PaymentRowID;
	
	private decimal _PayedPrice;
	
	private System.DateTime _PayedDate;
	
	private string _PayedDateShamsi;
	
	private string _PayedDescription;
	
	private int _CustomerUserID;
	
	private short _PayForTypeID;
	
	private string _PayState;
	
	public XtblCustomerPayment()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRowID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
	public long PaymentRowID
	{
		get
		{
			return this._PaymentRowID;
		}
		set
		{
			if ((this._PaymentRowID != value))
			{
				this._PaymentRowID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Decimal(18,0) NOT NULL")]
	public decimal PayedPrice
	{
		get
		{
			return this._PayedPrice;
		}
		set
		{
			if ((this._PayedPrice != value))
			{
				this._PayedPrice = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedDate", DbType="DateTime NOT NULL")]
	public System.DateTime PayedDate
	{
		get
		{
			return this._PayedDate;
		}
		set
		{
			if ((this._PayedDate != value))
			{
				this._PayedDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedDateShamsi", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string PayedDateShamsi
	{
		get
		{
			return this._PayedDateShamsi;
		}
		set
		{
			if ((this._PayedDateShamsi != value))
			{
				this._PayedDateShamsi = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string PayedDescription
	{
		get
		{
			return this._PayedDescription;
		}
		set
		{
			if ((this._PayedDescription != value))
			{
				this._PayedDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerUserID", DbType="Int NOT NULL")]
	public int CustomerUserID
	{
		get
		{
			return this._CustomerUserID;
		}
		set
		{
			if ((this._CustomerUserID != value))
			{
				this._CustomerUserID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayForTypeID", DbType="SmallInt NOT NULL")]
	public short PayForTypeID
	{
		get
		{
			return this._PayForTypeID;
		}
		set
		{
			if ((this._PayForTypeID != value))
			{
				this._PayForTypeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayState", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
	public string PayState
	{
		get
		{
			return this._PayState;
		}
		set
		{
			if ((this._PayState != value))
			{
				this._PayState = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XtblCustomerTookedRooms")]
public partial class XtblCustomerTookedRoom
{
	
	private int _EnID;
	
	private int _CustomerID;
	
	private string _NameCS;
	
	private string _SnameCS;
	
	private int _RoomID;
	
	private string _RoomNumber;
	
	private System.Nullable<int> _RoomType;
	
	private string _RoomTypeDescription;
	
	private System.Nullable<int> _RoomBed;
	
	private System.Nullable<decimal> _PriceOfPerNight;
	
	private System.Nullable<short> _RoomFloorID;
	
	private string _RoomFloorTitle;
	
	private System.DateTime _EnteredDate;
	
	private System.Nullable<decimal> _FirstPayment;
	
	private System.Nullable<System.DateTime> _ExitDate;
	
	private System.Nullable<int> _StayNights;
	
	private System.Nullable<decimal> _Expr1;
	
	private System.Nullable<decimal> _ToTalPriceOfStay;
	
	private System.Nullable<decimal> _PriceOfOtherServices;
	
	private System.Nullable<decimal> _DiscountOfCustomer;
	
	private System.Nullable<decimal> _TotalDebtPayment;
	
	private System.Nullable<int> _TasviehBit;
	
	private string _StateOfMainRoom;
	
	private string _EntDate;
	
	private string _ExtDate;
	
	public XtblCustomerTookedRoom()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnID", DbType="Int NOT NULL")]
	public int EnID
	{
		get
		{
			return this._EnID;
		}
		set
		{
			if ((this._EnID != value))
			{
				this._EnID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCS", DbType="NVarChar(100)")]
	public string NameCS
	{
		get
		{
			return this._NameCS;
		}
		set
		{
			if ((this._NameCS != value))
			{
				this._NameCS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnameCS", DbType="NVarChar(150)")]
	public string SnameCS
	{
		get
		{
			return this._SnameCS;
		}
		set
		{
			if ((this._SnameCS != value))
			{
				this._SnameCS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int NOT NULL")]
	public int RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				this._RoomID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(50)")]
	public string RoomNumber
	{
		get
		{
			return this._RoomNumber;
		}
		set
		{
			if ((this._RoomNumber != value))
			{
				this._RoomNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="Int")]
	public System.Nullable<int> RoomType
	{
		get
		{
			return this._RoomType;
		}
		set
		{
			if ((this._RoomType != value))
			{
				this._RoomType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTypeDescription", DbType="NVarChar(100)")]
	public string RoomTypeDescription
	{
		get
		{
			return this._RoomTypeDescription;
		}
		set
		{
			if ((this._RoomTypeDescription != value))
			{
				this._RoomTypeDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomBed", DbType="Int")]
	public System.Nullable<int> RoomBed
	{
		get
		{
			return this._RoomBed;
		}
		set
		{
			if ((this._RoomBed != value))
			{
				this._RoomBed = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfPerNight", DbType="Money")]
	public System.Nullable<decimal> PriceOfPerNight
	{
		get
		{
			return this._PriceOfPerNight;
		}
		set
		{
			if ((this._PriceOfPerNight != value))
			{
				this._PriceOfPerNight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorID", DbType="SmallInt")]
	public System.Nullable<short> RoomFloorID
	{
		get
		{
			return this._RoomFloorID;
		}
		set
		{
			if ((this._RoomFloorID != value))
			{
				this._RoomFloorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RoomFloorTitle
	{
		get
		{
			return this._RoomFloorTitle;
		}
		set
		{
			if ((this._RoomFloorTitle != value))
			{
				this._RoomFloorTitle = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredDate", DbType="DateTime NOT NULL")]
	public System.DateTime EnteredDate
	{
		get
		{
			return this._EnteredDate;
		}
		set
		{
			if ((this._EnteredDate != value))
			{
				this._EnteredDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPayment", DbType="Money")]
	public System.Nullable<decimal> FirstPayment
	{
		get
		{
			return this._FirstPayment;
		}
		set
		{
			if ((this._FirstPayment != value))
			{
				this._FirstPayment = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExitDate
	{
		get
		{
			return this._ExitDate;
		}
		set
		{
			if ((this._ExitDate != value))
			{
				this._ExitDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StayNights", DbType="Int")]
	public System.Nullable<int> StayNights
	{
		get
		{
			return this._StayNights;
		}
		set
		{
			if ((this._StayNights != value))
			{
				this._StayNights = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Money")]
	public System.Nullable<decimal> Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTalPriceOfStay", DbType="Money")]
	public System.Nullable<decimal> ToTalPriceOfStay
	{
		get
		{
			return this._ToTalPriceOfStay;
		}
		set
		{
			if ((this._ToTalPriceOfStay != value))
			{
				this._ToTalPriceOfStay = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfOtherServices", DbType="Money")]
	public System.Nullable<decimal> PriceOfOtherServices
	{
		get
		{
			return this._PriceOfOtherServices;
		}
		set
		{
			if ((this._PriceOfOtherServices != value))
			{
				this._PriceOfOtherServices = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountOfCustomer", DbType="Money")]
	public System.Nullable<decimal> DiscountOfCustomer
	{
		get
		{
			return this._DiscountOfCustomer;
		}
		set
		{
			if ((this._DiscountOfCustomer != value))
			{
				this._DiscountOfCustomer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebtPayment", DbType="Money")]
	public System.Nullable<decimal> TotalDebtPayment
	{
		get
		{
			return this._TotalDebtPayment;
		}
		set
		{
			if ((this._TotalDebtPayment != value))
			{
				this._TotalDebtPayment = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TasviehBit", DbType="Int")]
	public System.Nullable<int> TasviehBit
	{
		get
		{
			return this._TasviehBit;
		}
		set
		{
			if ((this._TasviehBit != value))
			{
				this._TasviehBit = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateOfMainRoom", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
	public string StateOfMainRoom
	{
		get
		{
			return this._StateOfMainRoom;
		}
		set
		{
			if ((this._StateOfMainRoom != value))
			{
				this._StateOfMainRoom = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntDate", DbType="NVarChar(10)")]
	public string EntDate
	{
		get
		{
			return this._EntDate;
		}
		set
		{
			if ((this._EntDate != value))
			{
				this._EntDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtDate", DbType="NVarChar(14)")]
	public string ExtDate
	{
		get
		{
			return this._ExtDate;
		}
		set
		{
			if ((this._ExtDate != value))
			{
				this._ExtDate = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XtblReserverForCombo")]
public partial class XtblReserverForCombo
{
	
	private int _RezrveID;
	
	private string _NameSname;
	
	public XtblReserverForCombo()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezrveID", DbType="Int NOT NULL")]
	public int RezrveID
	{
		get
		{
			return this._RezrveID;
		}
		set
		{
			if ((this._RezrveID != value))
			{
				this._RezrveID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSname", DbType="NVarChar(308)")]
	public string NameSname
	{
		get
		{
			return this._NameSname;
		}
		set
		{
			if ((this._NameSname != value))
			{
				this._NameSname = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XtblRoomFloorType")]
public partial class XtblRoomFloorType
{
	
	private short _RoomFloorID;
	
	private string _RoomFloorTitle;
	
	public XtblRoomFloorType()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorID", AutoSync=AutoSync.Always, DbType="SmallInt NOT NULL IDENTITY", IsDbGenerated=true)]
	public short RoomFloorID
	{
		get
		{
			return this._RoomFloorID;
		}
		set
		{
			if ((this._RoomFloorID != value))
			{
				this._RoomFloorID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RoomFloorTitle
	{
		get
		{
			return this._RoomFloorTitle;
		}
		set
		{
			if ((this._RoomFloorTitle != value))
			{
				this._RoomFloorTitle = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCounter")]
public partial class tblCounter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CntID;
	
	private System.Nullable<double> _CntCount;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCntIDChanging(int value);
    partial void OnCntIDChanged();
    partial void OnCntCountChanging(System.Nullable<double> value);
    partial void OnCntCountChanged();
    #endregion
	
	public tblCounter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CntID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CntID
	{
		get
		{
			return this._CntID;
		}
		set
		{
			if ((this._CntID != value))
			{
				this.OnCntIDChanging(value);
				this.SendPropertyChanging();
				this._CntID = value;
				this.SendPropertyChanged("CntID");
				this.OnCntIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CntCount", DbType="Float")]
	public System.Nullable<double> CntCount
	{
		get
		{
			return this._CntCount;
		}
		set
		{
			if ((this._CntCount != value))
			{
				this.OnCntCountChanging(value);
				this.SendPropertyChanging();
				this._CntCount = value;
				this.SendPropertyChanged("CntCount");
				this.OnCntCountChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCountryCities")]
public partial class tblCountryCity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CountryCityID;
	
	private System.Nullable<int> _CountryID;
	
	private string _Name;
	
	private EntitySet<tblServicesDef> _tblServicesDefs;
	
	private EntitySet<tblServicesDef> _tblServicesDefs1;
	
	private EntityRef<tblCountryCode> _tblCountryCode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryCityIDChanging(int value);
    partial void OnCountryCityIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public tblCountryCity()
	{
		this._tblServicesDefs = new EntitySet<tblServicesDef>(new Action<tblServicesDef>(this.attach_tblServicesDefs), new Action<tblServicesDef>(this.detach_tblServicesDefs));
		this._tblServicesDefs1 = new EntitySet<tblServicesDef>(new Action<tblServicesDef>(this.attach_tblServicesDefs1), new Action<tblServicesDef>(this.detach_tblServicesDefs1));
		this._tblCountryCode = default(EntityRef<tblCountryCode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CountryCityID
	{
		get
		{
			return this._CountryCityID;
		}
		set
		{
			if ((this._CountryCityID != value))
			{
				this.OnCountryCityIDChanging(value);
				this.SendPropertyChanging();
				this._CountryCityID = value;
				this.SendPropertyChanged("CountryCityID");
				this.OnCountryCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
	public System.Nullable<int> CountryID
	{
		get
		{
			return this._CountryID;
		}
		set
		{
			if ((this._CountryID != value))
			{
				if (this._tblCountryCode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCountryIDChanging(value);
				this.SendPropertyChanging();
				this._CountryID = value;
				this.SendPropertyChanged("CountryID");
				this.OnCountryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCountryCity_tblServicesDef", Storage="_tblServicesDefs", ThisKey="CountryCityID", OtherKey="FromCityID")]
	public EntitySet<tblServicesDef> tblServicesDefs
	{
		get
		{
			return this._tblServicesDefs;
		}
		set
		{
			this._tblServicesDefs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCountryCity_tblServicesDef1", Storage="_tblServicesDefs1", ThisKey="CountryCityID", OtherKey="ToCityID")]
	public EntitySet<tblServicesDef> tblServicesDefs1
	{
		get
		{
			return this._tblServicesDefs1;
		}
		set
		{
			this._tblServicesDefs1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCountryCode_tblCountryCity", Storage="_tblCountryCode", ThisKey="CountryID", OtherKey="CountryCodeID", IsForeignKey=true)]
	public tblCountryCode tblCountryCode
	{
		get
		{
			return this._tblCountryCode.Entity;
		}
		set
		{
			tblCountryCode previousValue = this._tblCountryCode.Entity;
			if (((previousValue != value) 
						|| (this._tblCountryCode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblCountryCode.Entity = null;
					previousValue.tblCountryCities.Remove(this);
				}
				this._tblCountryCode.Entity = value;
				if ((value != null))
				{
					value.tblCountryCities.Add(this);
					this._CountryID = value.CountryCodeID;
				}
				else
				{
					this._CountryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("tblCountryCode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblServicesDefs(tblServicesDef entity)
	{
		this.SendPropertyChanging();
		entity.tblCountryCity = this;
	}
	
	private void detach_tblServicesDefs(tblServicesDef entity)
	{
		this.SendPropertyChanging();
		entity.tblCountryCity = null;
	}
	
	private void attach_tblServicesDefs1(tblServicesDef entity)
	{
		this.SendPropertyChanging();
		entity.tblCountryCity1 = this;
	}
	
	private void detach_tblServicesDefs1(tblServicesDef entity)
	{
		this.SendPropertyChanging();
		entity.tblCountryCity1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCountryCodes")]
public partial class tblCountryCode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CountryCodeID;
	
	private string _CountryCode;
	
	private string _CountryName;
	
	private EntitySet<tblCountryCity> _tblCountryCities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryCodeIDChanging(int value);
    partial void OnCountryCodeIDChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
	
	public tblCountryCode()
	{
		this._tblCountryCities = new EntitySet<tblCountryCity>(new Action<tblCountryCity>(this.attach_tblCountryCities), new Action<tblCountryCity>(this.detach_tblCountryCities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CountryCodeID
	{
		get
		{
			return this._CountryCodeID;
		}
		set
		{
			if ((this._CountryCodeID != value))
			{
				this.OnCountryCodeIDChanging(value);
				this.SendPropertyChanging();
				this._CountryCodeID = value;
				this.SendPropertyChanged("CountryCodeID");
				this.OnCountryCodeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
	public string CountryCode
	{
		get
		{
			return this._CountryCode;
		}
		set
		{
			if ((this._CountryCode != value))
			{
				this.OnCountryCodeChanging(value);
				this.SendPropertyChanging();
				this._CountryCode = value;
				this.SendPropertyChanged("CountryCode");
				this.OnCountryCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string CountryName
	{
		get
		{
			return this._CountryName;
		}
		set
		{
			if ((this._CountryName != value))
			{
				this.OnCountryNameChanging(value);
				this.SendPropertyChanging();
				this._CountryName = value;
				this.SendPropertyChanged("CountryName");
				this.OnCountryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCountryCode_tblCountryCity", Storage="_tblCountryCities", ThisKey="CountryCodeID", OtherKey="CountryID")]
	public EntitySet<tblCountryCity> tblCountryCities
	{
		get
		{
			return this._tblCountryCities;
		}
		set
		{
			this._tblCountryCities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblCountryCities(tblCountryCity entity)
	{
		this.SendPropertyChanging();
		entity.tblCountryCode = this;
	}
	
	private void detach_tblCountryCities(tblCountryCity entity)
	{
		this.SendPropertyChanging();
		entity.tblCountryCode = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomerPayments")]
public partial class tblCustomerPayment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _PaymentRowID;
	
	private decimal _PayedPrice;
	
	private System.DateTime _PayedDate;
	
	private string _PayedDateShamsi;
	
	private string _PayedDescription;
	
	private int _CustomerUserID;
	
	private short _PayForTypeID;
	
	private EntityRef<tblUser> _tblUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentRowIDChanging(long value);
    partial void OnPaymentRowIDChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPayedDateChanging(System.DateTime value);
    partial void OnPayedDateChanged();
    partial void OnPayedDateShamsiChanging(string value);
    partial void OnPayedDateShamsiChanged();
    partial void OnPayedDescriptionChanging(string value);
    partial void OnPayedDescriptionChanged();
    partial void OnCustomerUserIDChanging(int value);
    partial void OnCustomerUserIDChanged();
    partial void OnPayForTypeIDChanging(short value);
    partial void OnPayForTypeIDChanged();
    #endregion
	
	public tblCustomerPayment()
	{
		this._tblUser = default(EntityRef<tblUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRowID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long PaymentRowID
	{
		get
		{
			return this._PaymentRowID;
		}
		set
		{
			if ((this._PaymentRowID != value))
			{
				this.OnPaymentRowIDChanging(value);
				this.SendPropertyChanging();
				this._PaymentRowID = value;
				this.SendPropertyChanged("PaymentRowID");
				this.OnPaymentRowIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Decimal(18,0) NOT NULL")]
	public decimal PayedPrice
	{
		get
		{
			return this._PayedPrice;
		}
		set
		{
			if ((this._PayedPrice != value))
			{
				this.OnPayedPriceChanging(value);
				this.SendPropertyChanging();
				this._PayedPrice = value;
				this.SendPropertyChanged("PayedPrice");
				this.OnPayedPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedDate", DbType="DateTime NOT NULL")]
	public System.DateTime PayedDate
	{
		get
		{
			return this._PayedDate;
		}
		set
		{
			if ((this._PayedDate != value))
			{
				this.OnPayedDateChanging(value);
				this.SendPropertyChanging();
				this._PayedDate = value;
				this.SendPropertyChanged("PayedDate");
				this.OnPayedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedDateShamsi", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string PayedDateShamsi
	{
		get
		{
			return this._PayedDateShamsi;
		}
		set
		{
			if ((this._PayedDateShamsi != value))
			{
				this.OnPayedDateShamsiChanging(value);
				this.SendPropertyChanging();
				this._PayedDateShamsi = value;
				this.SendPropertyChanged("PayedDateShamsi");
				this.OnPayedDateShamsiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string PayedDescription
	{
		get
		{
			return this._PayedDescription;
		}
		set
		{
			if ((this._PayedDescription != value))
			{
				this.OnPayedDescriptionChanging(value);
				this.SendPropertyChanging();
				this._PayedDescription = value;
				this.SendPropertyChanged("PayedDescription");
				this.OnPayedDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerUserID", DbType="Int NOT NULL")]
	public int CustomerUserID
	{
		get
		{
			return this._CustomerUserID;
		}
		set
		{
			if ((this._CustomerUserID != value))
			{
				if (this._tblUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerUserIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerUserID = value;
				this.SendPropertyChanged("CustomerUserID");
				this.OnCustomerUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayForTypeID", DbType="SmallInt NOT NULL")]
	public short PayForTypeID
	{
		get
		{
			return this._PayForTypeID;
		}
		set
		{
			if ((this._PayForTypeID != value))
			{
				this.OnPayForTypeIDChanging(value);
				this.SendPropertyChanging();
				this._PayForTypeID = value;
				this.SendPropertyChanged("PayForTypeID");
				this.OnPayForTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCustomerPayment", Storage="_tblUser", ThisKey="CustomerUserID", OtherKey="UserID", IsForeignKey=true)]
	public tblUser tblUser
	{
		get
		{
			return this._tblUser.Entity;
		}
		set
		{
			tblUser previousValue = this._tblUser.Entity;
			if (((previousValue != value) 
						|| (this._tblUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblUser.Entity = null;
					previousValue.tblCustomerPayments.Remove(this);
				}
				this._tblUser.Entity = value;
				if ((value != null))
				{
					value.tblCustomerPayments.Add(this);
					this._CustomerUserID = value.UserID;
				}
				else
				{
					this._CustomerUserID = default(int);
				}
				this.SendPropertyChanged("tblUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEECus")]
public partial class tblEECus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EnID;
	
	private int _CustomerID;
	
	private int _RoomID;
	
	private System.DateTime _EnteredDate;
	
	private System.Nullable<decimal> _FirstPayment;
	
	private System.Nullable<System.DateTime> _ExitDate;
	
	private System.Nullable<int> _StayNights;
	
	private System.Nullable<decimal> _PriceOfPerNight;
	
	private System.Nullable<decimal> _ToTalPriceOfStay;
	
	private System.Nullable<decimal> _PriceOfOtherServices;
	
	private System.Nullable<decimal> _DiscountOfCustomer;
	
	private System.Nullable<decimal> _TotalDebtPayment;
	
	private System.Nullable<int> _TasviehBit;
	
	private EntityRef<tblRoom> _tblRoom;
	
	private EntityRef<tblUser> _tblUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnIDChanging(int value);
    partial void OnEnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnEnteredDateChanging(System.DateTime value);
    partial void OnEnteredDateChanged();
    partial void OnFirstPaymentChanging(System.Nullable<decimal> value);
    partial void OnFirstPaymentChanged();
    partial void OnExitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExitDateChanged();
    partial void OnStayNightsChanging(System.Nullable<int> value);
    partial void OnStayNightsChanged();
    partial void OnPriceOfPerNightChanging(System.Nullable<decimal> value);
    partial void OnPriceOfPerNightChanged();
    partial void OnToTalPriceOfStayChanging(System.Nullable<decimal> value);
    partial void OnToTalPriceOfStayChanged();
    partial void OnPriceOfOtherServicesChanging(System.Nullable<decimal> value);
    partial void OnPriceOfOtherServicesChanged();
    partial void OnDiscountOfCustomerChanging(System.Nullable<decimal> value);
    partial void OnDiscountOfCustomerChanged();
    partial void OnTotalDebtPaymentChanging(System.Nullable<decimal> value);
    partial void OnTotalDebtPaymentChanged();
    partial void OnTasviehBitChanging(System.Nullable<int> value);
    partial void OnTasviehBitChanged();
    #endregion
	
	public tblEECus()
	{
		this._tblRoom = default(EntityRef<tblRoom>);
		this._tblUser = default(EntityRef<tblUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int EnID
	{
		get
		{
			return this._EnID;
		}
		set
		{
			if ((this._EnID != value))
			{
				this.OnEnIDChanging(value);
				this.SendPropertyChanging();
				this._EnID = value;
				this.SendPropertyChanged("EnID");
				this.OnEnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._tblUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				if (this._tblRoom.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomIDChanging(value);
				this.SendPropertyChanging();
				this._RoomID = value;
				this.SendPropertyChanged("RoomID");
				this.OnRoomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
	public System.DateTime EnteredDate
	{
		get
		{
			return this._EnteredDate;
		}
		set
		{
			if ((this._EnteredDate != value))
			{
				this.OnEnteredDateChanging(value);
				this.SendPropertyChanging();
				this._EnteredDate = value;
				this.SendPropertyChanged("EnteredDate");
				this.OnEnteredDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPayment", DbType="Money")]
	public System.Nullable<decimal> FirstPayment
	{
		get
		{
			return this._FirstPayment;
		}
		set
		{
			if ((this._FirstPayment != value))
			{
				this.OnFirstPaymentChanging(value);
				this.SendPropertyChanging();
				this._FirstPayment = value;
				this.SendPropertyChanged("FirstPayment");
				this.OnFirstPaymentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExitDate
	{
		get
		{
			return this._ExitDate;
		}
		set
		{
			if ((this._ExitDate != value))
			{
				this.OnExitDateChanging(value);
				this.SendPropertyChanging();
				this._ExitDate = value;
				this.SendPropertyChanged("ExitDate");
				this.OnExitDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StayNights", DbType="Int")]
	public System.Nullable<int> StayNights
	{
		get
		{
			return this._StayNights;
		}
		set
		{
			if ((this._StayNights != value))
			{
				this.OnStayNightsChanging(value);
				this.SendPropertyChanging();
				this._StayNights = value;
				this.SendPropertyChanged("StayNights");
				this.OnStayNightsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfPerNight", DbType="Money")]
	public System.Nullable<decimal> PriceOfPerNight
	{
		get
		{
			return this._PriceOfPerNight;
		}
		set
		{
			if ((this._PriceOfPerNight != value))
			{
				this.OnPriceOfPerNightChanging(value);
				this.SendPropertyChanging();
				this._PriceOfPerNight = value;
				this.SendPropertyChanged("PriceOfPerNight");
				this.OnPriceOfPerNightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTalPriceOfStay", DbType="Money")]
	public System.Nullable<decimal> ToTalPriceOfStay
	{
		get
		{
			return this._ToTalPriceOfStay;
		}
		set
		{
			if ((this._ToTalPriceOfStay != value))
			{
				this.OnToTalPriceOfStayChanging(value);
				this.SendPropertyChanging();
				this._ToTalPriceOfStay = value;
				this.SendPropertyChanged("ToTalPriceOfStay");
				this.OnToTalPriceOfStayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfOtherServices", DbType="Money")]
	public System.Nullable<decimal> PriceOfOtherServices
	{
		get
		{
			return this._PriceOfOtherServices;
		}
		set
		{
			if ((this._PriceOfOtherServices != value))
			{
				this.OnPriceOfOtherServicesChanging(value);
				this.SendPropertyChanging();
				this._PriceOfOtherServices = value;
				this.SendPropertyChanged("PriceOfOtherServices");
				this.OnPriceOfOtherServicesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountOfCustomer", DbType="Money")]
	public System.Nullable<decimal> DiscountOfCustomer
	{
		get
		{
			return this._DiscountOfCustomer;
		}
		set
		{
			if ((this._DiscountOfCustomer != value))
			{
				this.OnDiscountOfCustomerChanging(value);
				this.SendPropertyChanging();
				this._DiscountOfCustomer = value;
				this.SendPropertyChanged("DiscountOfCustomer");
				this.OnDiscountOfCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebtPayment", DbType="Money")]
	public System.Nullable<decimal> TotalDebtPayment
	{
		get
		{
			return this._TotalDebtPayment;
		}
		set
		{
			if ((this._TotalDebtPayment != value))
			{
				this.OnTotalDebtPaymentChanging(value);
				this.SendPropertyChanging();
				this._TotalDebtPayment = value;
				this.SendPropertyChanged("TotalDebtPayment");
				this.OnTotalDebtPaymentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TasviehBit", DbType="Int")]
	public System.Nullable<int> TasviehBit
	{
		get
		{
			return this._TasviehBit;
		}
		set
		{
			if ((this._TasviehBit != value))
			{
				this.OnTasviehBitChanging(value);
				this.SendPropertyChanging();
				this._TasviehBit = value;
				this.SendPropertyChanged("TasviehBit");
				this.OnTasviehBitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoom_tblEECus", Storage="_tblRoom", ThisKey="RoomID", OtherKey="RoomID", IsForeignKey=true)]
	public tblRoom tblRoom
	{
		get
		{
			return this._tblRoom.Entity;
		}
		set
		{
			tblRoom previousValue = this._tblRoom.Entity;
			if (((previousValue != value) 
						|| (this._tblRoom.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblRoom.Entity = null;
					previousValue.tblEECus.Remove(this);
				}
				this._tblRoom.Entity = value;
				if ((value != null))
				{
					value.tblEECus.Add(this);
					this._RoomID = value.RoomID;
				}
				else
				{
					this._RoomID = default(int);
				}
				this.SendPropertyChanged("tblRoom");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblEECus", Storage="_tblUser", ThisKey="CustomerID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public tblUser tblUser
	{
		get
		{
			return this._tblUser.Entity;
		}
		set
		{
			tblUser previousValue = this._tblUser.Entity;
			if (((previousValue != value) 
						|| (this._tblUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblUser.Entity = null;
					previousValue.tblEECus.Remove(this);
				}
				this._tblUser.Entity = value;
				if ((value != null))
				{
					value.tblEECus.Add(this);
					this._CustomerID = value.UserID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("tblUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLinks")]
public partial class tblLink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LinksID;
	
	private string _LinkAddress;
	
	private string _LinkDescription;
	
	private System.Nullable<int> _LinkPermiss;
	
	private System.Nullable<double> _LinkSort;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinksIDChanging(int value);
    partial void OnLinksIDChanged();
    partial void OnLinkAddressChanging(string value);
    partial void OnLinkAddressChanged();
    partial void OnLinkDescriptionChanging(string value);
    partial void OnLinkDescriptionChanged();
    partial void OnLinkPermissChanging(System.Nullable<int> value);
    partial void OnLinkPermissChanged();
    partial void OnLinkSortChanging(System.Nullable<double> value);
    partial void OnLinkSortChanged();
    #endregion
	
	public tblLink()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinksID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LinksID
	{
		get
		{
			return this._LinksID;
		}
		set
		{
			if ((this._LinksID != value))
			{
				this.OnLinksIDChanging(value);
				this.SendPropertyChanging();
				this._LinksID = value;
				this.SendPropertyChanged("LinksID");
				this.OnLinksIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkAddress", DbType="NVarChar(100)")]
	public string LinkAddress
	{
		get
		{
			return this._LinkAddress;
		}
		set
		{
			if ((this._LinkAddress != value))
			{
				this.OnLinkAddressChanging(value);
				this.SendPropertyChanging();
				this._LinkAddress = value;
				this.SendPropertyChanged("LinkAddress");
				this.OnLinkAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkDescription", DbType="NVarChar(100)")]
	public string LinkDescription
	{
		get
		{
			return this._LinkDescription;
		}
		set
		{
			if ((this._LinkDescription != value))
			{
				this.OnLinkDescriptionChanging(value);
				this.SendPropertyChanging();
				this._LinkDescription = value;
				this.SendPropertyChanged("LinkDescription");
				this.OnLinkDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkPermiss", DbType="Int")]
	public System.Nullable<int> LinkPermiss
	{
		get
		{
			return this._LinkPermiss;
		}
		set
		{
			if ((this._LinkPermiss != value))
			{
				this.OnLinkPermissChanging(value);
				this.SendPropertyChanging();
				this._LinkPermiss = value;
				this.SendPropertyChanged("LinkPermiss");
				this.OnLinkPermissChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkSort", DbType="Float")]
	public System.Nullable<double> LinkSort
	{
		get
		{
			return this._LinkSort;
		}
		set
		{
			if ((this._LinkSort != value))
			{
				this.OnLinkSortChanging(value);
				this.SendPropertyChanging();
				this._LinkSort = value;
				this.SendPropertyChanged("LinkSort");
				this.OnLinkSortChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMonthHa")]
public partial class tblMonthHa : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MonthID;
	
	private string _MonthName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthIDChanging(int value);
    partial void OnMonthIDChanged();
    partial void OnMonthNameChanging(string value);
    partial void OnMonthNameChanged();
    #endregion
	
	public tblMonthHa()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MonthID
	{
		get
		{
			return this._MonthID;
		}
		set
		{
			if ((this._MonthID != value))
			{
				this.OnMonthIDChanging(value);
				this.SendPropertyChanging();
				this._MonthID = value;
				this.SendPropertyChanged("MonthID");
				this.OnMonthIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MonthName
	{
		get
		{
			return this._MonthName;
		}
		set
		{
			if ((this._MonthName != value))
			{
				this.OnMonthNameChanging(value);
				this.SendPropertyChanging();
				this._MonthName = value;
				this.SendPropertyChanged("MonthName");
				this.OnMonthNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRezerveRoom")]
public partial class tblRezerveRoom : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RezrveID;
	
	private int _CustomerID;
	
	private int _RoomID;
	
	private string _RezerveDate;
	
	private EntityRef<tblRoom> _tblRoom;
	
	private EntityRef<tblUser> _tblUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRezrveIDChanging(int value);
    partial void OnRezrveIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnRezerveDateChanging(string value);
    partial void OnRezerveDateChanged();
    #endregion
	
	public tblRezerveRoom()
	{
		this._tblRoom = default(EntityRef<tblRoom>);
		this._tblUser = default(EntityRef<tblUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezrveID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int RezrveID
	{
		get
		{
			return this._RezrveID;
		}
		set
		{
			if ((this._RezrveID != value))
			{
				this.OnRezrveIDChanging(value);
				this.SendPropertyChanging();
				this._RezrveID = value;
				this.SendPropertyChanged("RezrveID");
				this.OnRezrveIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._tblUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				if (this._tblRoom.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomIDChanging(value);
				this.SendPropertyChanging();
				this._RoomID = value;
				this.SendPropertyChanged("RoomID");
				this.OnRoomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string RezerveDate
	{
		get
		{
			return this._RezerveDate;
		}
		set
		{
			if ((this._RezerveDate != value))
			{
				this.OnRezerveDateChanging(value);
				this.SendPropertyChanging();
				this._RezerveDate = value;
				this.SendPropertyChanged("RezerveDate");
				this.OnRezerveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoom_tblRezerveRoom", Storage="_tblRoom", ThisKey="RoomID", OtherKey="RoomID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public tblRoom tblRoom
	{
		get
		{
			return this._tblRoom.Entity;
		}
		set
		{
			tblRoom previousValue = this._tblRoom.Entity;
			if (((previousValue != value) 
						|| (this._tblRoom.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblRoom.Entity = null;
					previousValue.tblRezerveRooms.Remove(this);
				}
				this._tblRoom.Entity = value;
				if ((value != null))
				{
					value.tblRezerveRooms.Add(this);
					this._RoomID = value.RoomID;
				}
				else
				{
					this._RoomID = default(int);
				}
				this.SendPropertyChanged("tblRoom");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblRezerveRoom", Storage="_tblUser", ThisKey="CustomerID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public tblUser tblUser
	{
		get
		{
			return this._tblUser.Entity;
		}
		set
		{
			tblUser previousValue = this._tblUser.Entity;
			if (((previousValue != value) 
						|| (this._tblUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblUser.Entity = null;
					previousValue.tblRezerveRooms.Remove(this);
				}
				this._tblUser.Entity = value;
				if ((value != null))
				{
					value.tblRezerveRooms.Add(this);
					this._CustomerID = value.UserID;
				}
				else
				{
					this._CustomerID = default(int);
				}
				this.SendPropertyChanged("tblUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRezerveTickets")]
public partial class tblRezerveTicket : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RezerveID;
	
	private string _RezerveDate;
	
	private int _RezerverID;
	
	private int _ServiceID;
	
	private int _QuanTity;
	
	private string _TotalPrice;
	
	private string _Notes;
	
	private string _FishNumber;
	
	private System.Nullable<bool> _TaiidBit;
	
	private EntityRef<tblServicesDef> _tblServicesDef;
	
	private EntityRef<tblUser> _tblUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRezerveIDChanging(int value);
    partial void OnRezerveIDChanged();
    partial void OnRezerveDateChanging(string value);
    partial void OnRezerveDateChanged();
    partial void OnRezerverIDChanging(int value);
    partial void OnRezerverIDChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnQuanTityChanging(int value);
    partial void OnQuanTityChanged();
    partial void OnTotalPriceChanging(string value);
    partial void OnTotalPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnFishNumberChanging(string value);
    partial void OnFishNumberChanged();
    partial void OnTaiidBitChanging(System.Nullable<bool> value);
    partial void OnTaiidBitChanged();
    #endregion
	
	public tblRezerveTicket()
	{
		this._tblServicesDef = default(EntityRef<tblServicesDef>);
		this._tblUser = default(EntityRef<tblUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RezerveID
	{
		get
		{
			return this._RezerveID;
		}
		set
		{
			if ((this._RezerveID != value))
			{
				this.OnRezerveIDChanging(value);
				this.SendPropertyChanging();
				this._RezerveID = value;
				this.SendPropertyChanged("RezerveID");
				this.OnRezerveIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10)")]
	public string RezerveDate
	{
		get
		{
			return this._RezerveDate;
		}
		set
		{
			if ((this._RezerveDate != value))
			{
				this.OnRezerveDateChanging(value);
				this.SendPropertyChanging();
				this._RezerveDate = value;
				this.SendPropertyChanged("RezerveDate");
				this.OnRezerveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerverID", DbType="Int NOT NULL")]
	public int RezerverID
	{
		get
		{
			return this._RezerverID;
		}
		set
		{
			if ((this._RezerverID != value))
			{
				if (this._tblUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRezerverIDChanging(value);
				this.SendPropertyChanging();
				this._RezerverID = value;
				this.SendPropertyChanged("RezerverID");
				this.OnRezerverIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int NOT NULL")]
	public int ServiceID
	{
		get
		{
			return this._ServiceID;
		}
		set
		{
			if ((this._ServiceID != value))
			{
				if (this._tblServicesDef.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnServiceIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceID = value;
				this.SendPropertyChanged("ServiceID");
				this.OnServiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanTity", DbType="Int NOT NULL")]
	public int QuanTity
	{
		get
		{
			return this._QuanTity;
		}
		set
		{
			if ((this._QuanTity != value))
			{
				this.OnQuanTityChanging(value);
				this.SendPropertyChanging();
				this._QuanTity = value;
				this.SendPropertyChanged("QuanTity");
				this.OnQuanTityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="NVarChar(15)")]
	public string TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FishNumber", DbType="NVarChar(150)")]
	public string FishNumber
	{
		get
		{
			return this._FishNumber;
		}
		set
		{
			if ((this._FishNumber != value))
			{
				this.OnFishNumberChanging(value);
				this.SendPropertyChanging();
				this._FishNumber = value;
				this.SendPropertyChanged("FishNumber");
				this.OnFishNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiidBit", DbType="Bit")]
	public System.Nullable<bool> TaiidBit
	{
		get
		{
			return this._TaiidBit;
		}
		set
		{
			if ((this._TaiidBit != value))
			{
				this.OnTaiidBitChanging(value);
				this.SendPropertyChanging();
				this._TaiidBit = value;
				this.SendPropertyChanged("TaiidBit");
				this.OnTaiidBitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblServicesDef_tblRezerveTicket", Storage="_tblServicesDef", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
	public tblServicesDef tblServicesDef
	{
		get
		{
			return this._tblServicesDef.Entity;
		}
		set
		{
			tblServicesDef previousValue = this._tblServicesDef.Entity;
			if (((previousValue != value) 
						|| (this._tblServicesDef.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblServicesDef.Entity = null;
					previousValue.tblRezerveTickets.Remove(this);
				}
				this._tblServicesDef.Entity = value;
				if ((value != null))
				{
					value.tblRezerveTickets.Add(this);
					this._ServiceID = value.ServiceID;
				}
				else
				{
					this._ServiceID = default(int);
				}
				this.SendPropertyChanged("tblServicesDef");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblRezerveTicket", Storage="_tblUser", ThisKey="RezerverID", OtherKey="UserID", IsForeignKey=true)]
	public tblUser tblUser
	{
		get
		{
			return this._tblUser.Entity;
		}
		set
		{
			tblUser previousValue = this._tblUser.Entity;
			if (((previousValue != value) 
						|| (this._tblUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblUser.Entity = null;
					previousValue.tblRezerveTickets.Remove(this);
				}
				this._tblUser.Entity = value;
				if ((value != null))
				{
					value.tblRezerveTickets.Add(this);
					this._RezerverID = value.UserID;
				}
				else
				{
					this._RezerverID = default(int);
				}
				this.SendPropertyChanged("tblUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoomFloor")]
public partial class tblRoomFloor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private short _RoomFloorID;
	
	private string _RoomFloorTitle;
	
	private EntitySet<tblRoom> _tblRooms;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomFloorIDChanging(short value);
    partial void OnRoomFloorIDChanged();
    partial void OnRoomFloorTitleChanging(string value);
    partial void OnRoomFloorTitleChanged();
    #endregion
	
	public tblRoomFloor()
	{
		this._tblRooms = new EntitySet<tblRoom>(new Action<tblRoom>(this.attach_tblRooms), new Action<tblRoom>(this.detach_tblRooms));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public short RoomFloorID
	{
		get
		{
			return this._RoomFloorID;
		}
		set
		{
			if ((this._RoomFloorID != value))
			{
				this.OnRoomFloorIDChanging(value);
				this.SendPropertyChanging();
				this._RoomFloorID = value;
				this.SendPropertyChanged("RoomFloorID");
				this.OnRoomFloorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RoomFloorTitle
	{
		get
		{
			return this._RoomFloorTitle;
		}
		set
		{
			if ((this._RoomFloorTitle != value))
			{
				this.OnRoomFloorTitleChanging(value);
				this.SendPropertyChanging();
				this._RoomFloorTitle = value;
				this.SendPropertyChanged("RoomFloorTitle");
				this.OnRoomFloorTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomFloor_tblRoom", Storage="_tblRooms", ThisKey="RoomFloorID", OtherKey="RoomFloorID")]
	public EntitySet<tblRoom> tblRooms
	{
		get
		{
			return this._tblRooms;
		}
		set
		{
			this._tblRooms.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblRooms(tblRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoomFloor = this;
	}
	
	private void detach_tblRooms(tblRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoomFloor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRooms")]
public partial class tblRoom : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoomID;
	
	private string _RoomNumber;
	
	private System.Nullable<int> _RoomType;
	
	private System.Nullable<int> _RoomBed;
	
	private System.Nullable<decimal> _PriceOfPerNight;
	
	private System.Nullable<int> _RoomStatuse;
	
	private System.Nullable<short> _RoomFloorID;
	
	private EntitySet<tblEECus> _tblEECus;
	
	private EntitySet<tblRezerveRoom> _tblRezerveRooms;
	
	private EntityRef<tblRoomFloor> _tblRoomFloor;
	
	private EntityRef<tblRoomState> _tblRoomState;
	
	private EntityRef<tblRoomType> _tblRoomType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnRoomTypeChanging(System.Nullable<int> value);
    partial void OnRoomTypeChanged();
    partial void OnRoomBedChanging(System.Nullable<int> value);
    partial void OnRoomBedChanged();
    partial void OnPriceOfPerNightChanging(System.Nullable<decimal> value);
    partial void OnPriceOfPerNightChanged();
    partial void OnRoomStatuseChanging(System.Nullable<int> value);
    partial void OnRoomStatuseChanged();
    partial void OnRoomFloorIDChanging(System.Nullable<short> value);
    partial void OnRoomFloorIDChanged();
    #endregion
	
	public tblRoom()
	{
		this._tblEECus = new EntitySet<tblEECus>(new Action<tblEECus>(this.attach_tblEECus), new Action<tblEECus>(this.detach_tblEECus));
		this._tblRezerveRooms = new EntitySet<tblRezerveRoom>(new Action<tblRezerveRoom>(this.attach_tblRezerveRooms), new Action<tblRezerveRoom>(this.detach_tblRezerveRooms));
		this._tblRoomFloor = default(EntityRef<tblRoomFloor>);
		this._tblRoomState = default(EntityRef<tblRoomState>);
		this._tblRoomType = default(EntityRef<tblRoomType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoomID
	{
		get
		{
			return this._RoomID;
		}
		set
		{
			if ((this._RoomID != value))
			{
				this.OnRoomIDChanging(value);
				this.SendPropertyChanging();
				this._RoomID = value;
				this.SendPropertyChanged("RoomID");
				this.OnRoomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(50)")]
	public string RoomNumber
	{
		get
		{
			return this._RoomNumber;
		}
		set
		{
			if ((this._RoomNumber != value))
			{
				this.OnRoomNumberChanging(value);
				this.SendPropertyChanging();
				this._RoomNumber = value;
				this.SendPropertyChanged("RoomNumber");
				this.OnRoomNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="Int")]
	public System.Nullable<int> RoomType
	{
		get
		{
			return this._RoomType;
		}
		set
		{
			if ((this._RoomType != value))
			{
				if (this._tblRoomType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomTypeChanging(value);
				this.SendPropertyChanging();
				this._RoomType = value;
				this.SendPropertyChanged("RoomType");
				this.OnRoomTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomBed", DbType="Int")]
	public System.Nullable<int> RoomBed
	{
		get
		{
			return this._RoomBed;
		}
		set
		{
			if ((this._RoomBed != value))
			{
				this.OnRoomBedChanging(value);
				this.SendPropertyChanging();
				this._RoomBed = value;
				this.SendPropertyChanged("RoomBed");
				this.OnRoomBedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfPerNight", DbType="Money")]
	public System.Nullable<decimal> PriceOfPerNight
	{
		get
		{
			return this._PriceOfPerNight;
		}
		set
		{
			if ((this._PriceOfPerNight != value))
			{
				this.OnPriceOfPerNightChanging(value);
				this.SendPropertyChanging();
				this._PriceOfPerNight = value;
				this.SendPropertyChanged("PriceOfPerNight");
				this.OnPriceOfPerNightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomStatuse", DbType="Int")]
	public System.Nullable<int> RoomStatuse
	{
		get
		{
			return this._RoomStatuse;
		}
		set
		{
			if ((this._RoomStatuse != value))
			{
				if (this._tblRoomState.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomStatuseChanging(value);
				this.SendPropertyChanging();
				this._RoomStatuse = value;
				this.SendPropertyChanged("RoomStatuse");
				this.OnRoomStatuseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomFloorID", DbType="SmallInt")]
	public System.Nullable<short> RoomFloorID
	{
		get
		{
			return this._RoomFloorID;
		}
		set
		{
			if ((this._RoomFloorID != value))
			{
				if (this._tblRoomFloor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoomFloorIDChanging(value);
				this.SendPropertyChanging();
				this._RoomFloorID = value;
				this.SendPropertyChanged("RoomFloorID");
				this.OnRoomFloorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoom_tblEECus", Storage="_tblEECus", ThisKey="RoomID", OtherKey="RoomID")]
	public EntitySet<tblEECus> tblEECus
	{
		get
		{
			return this._tblEECus;
		}
		set
		{
			this._tblEECus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoom_tblRezerveRoom", Storage="_tblRezerveRooms", ThisKey="RoomID", OtherKey="RoomID")]
	public EntitySet<tblRezerveRoom> tblRezerveRooms
	{
		get
		{
			return this._tblRezerveRooms;
		}
		set
		{
			this._tblRezerveRooms.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomFloor_tblRoom", Storage="_tblRoomFloor", ThisKey="RoomFloorID", OtherKey="RoomFloorID", IsForeignKey=true)]
	public tblRoomFloor tblRoomFloor
	{
		get
		{
			return this._tblRoomFloor.Entity;
		}
		set
		{
			tblRoomFloor previousValue = this._tblRoomFloor.Entity;
			if (((previousValue != value) 
						|| (this._tblRoomFloor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblRoomFloor.Entity = null;
					previousValue.tblRooms.Remove(this);
				}
				this._tblRoomFloor.Entity = value;
				if ((value != null))
				{
					value.tblRooms.Add(this);
					this._RoomFloorID = value.RoomFloorID;
				}
				else
				{
					this._RoomFloorID = default(Nullable<short>);
				}
				this.SendPropertyChanged("tblRoomFloor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomState_tblRoom", Storage="_tblRoomState", ThisKey="RoomStatuse", OtherKey="StatID", IsForeignKey=true, DeleteRule="CASCADE")]
	public tblRoomState tblRoomState
	{
		get
		{
			return this._tblRoomState.Entity;
		}
		set
		{
			tblRoomState previousValue = this._tblRoomState.Entity;
			if (((previousValue != value) 
						|| (this._tblRoomState.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblRoomState.Entity = null;
					previousValue.tblRooms.Remove(this);
				}
				this._tblRoomState.Entity = value;
				if ((value != null))
				{
					value.tblRooms.Add(this);
					this._RoomStatuse = value.StatID;
				}
				else
				{
					this._RoomStatuse = default(Nullable<int>);
				}
				this.SendPropertyChanged("tblRoomState");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomType_tblRoom", Storage="_tblRoomType", ThisKey="RoomType", OtherKey="RoomTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
	public tblRoomType tblRoomType
	{
		get
		{
			return this._tblRoomType.Entity;
		}
		set
		{
			tblRoomType previousValue = this._tblRoomType.Entity;
			if (((previousValue != value) 
						|| (this._tblRoomType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblRoomType.Entity = null;
					previousValue.tblRooms.Remove(this);
				}
				this._tblRoomType.Entity = value;
				if ((value != null))
				{
					value.tblRooms.Add(this);
					this._RoomType = value.RoomTypeID;
				}
				else
				{
					this._RoomType = default(Nullable<int>);
				}
				this.SendPropertyChanged("tblRoomType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblEECus(tblEECus entity)
	{
		this.SendPropertyChanging();
		entity.tblRoom = this;
	}
	
	private void detach_tblEECus(tblEECus entity)
	{
		this.SendPropertyChanging();
		entity.tblRoom = null;
	}
	
	private void attach_tblRezerveRooms(tblRezerveRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoom = this;
	}
	
	private void detach_tblRezerveRooms(tblRezerveRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoom = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoomState")]
public partial class tblRoomState : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StatID;
	
	private string _RoomStatuseDesc;
	
	private EntitySet<tblRoom> _tblRooms;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatIDChanging(int value);
    partial void OnStatIDChanged();
    partial void OnRoomStatuseDescChanging(string value);
    partial void OnRoomStatuseDescChanged();
    #endregion
	
	public tblRoomState()
	{
		this._tblRooms = new EntitySet<tblRoom>(new Action<tblRoom>(this.attach_tblRooms), new Action<tblRoom>(this.detach_tblRooms));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StatID
	{
		get
		{
			return this._StatID;
		}
		set
		{
			if ((this._StatID != value))
			{
				this.OnStatIDChanging(value);
				this.SendPropertyChanging();
				this._StatID = value;
				this.SendPropertyChanged("StatID");
				this.OnStatIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomStatuseDesc", DbType="NVarChar(50)")]
	public string RoomStatuseDesc
	{
		get
		{
			return this._RoomStatuseDesc;
		}
		set
		{
			if ((this._RoomStatuseDesc != value))
			{
				this.OnRoomStatuseDescChanging(value);
				this.SendPropertyChanging();
				this._RoomStatuseDesc = value;
				this.SendPropertyChanged("RoomStatuseDesc");
				this.OnRoomStatuseDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomState_tblRoom", Storage="_tblRooms", ThisKey="StatID", OtherKey="RoomStatuse")]
	public EntitySet<tblRoom> tblRooms
	{
		get
		{
			return this._tblRooms;
		}
		set
		{
			this._tblRooms.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblRooms(tblRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoomState = this;
	}
	
	private void detach_tblRooms(tblRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoomState = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoomTypes")]
public partial class tblRoomType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoomTypeID;
	
	private string _RoomTypeDescription;
	
	private EntitySet<tblRoom> _tblRooms;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomTypeIDChanging(int value);
    partial void OnRoomTypeIDChanged();
    partial void OnRoomTypeDescriptionChanging(string value);
    partial void OnRoomTypeDescriptionChanged();
    #endregion
	
	public tblRoomType()
	{
		this._tblRooms = new EntitySet<tblRoom>(new Action<tblRoom>(this.attach_tblRooms), new Action<tblRoom>(this.detach_tblRooms));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoomTypeID
	{
		get
		{
			return this._RoomTypeID;
		}
		set
		{
			if ((this._RoomTypeID != value))
			{
				this.OnRoomTypeIDChanging(value);
				this.SendPropertyChanging();
				this._RoomTypeID = value;
				this.SendPropertyChanged("RoomTypeID");
				this.OnRoomTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTypeDescription", DbType="NVarChar(100)")]
	public string RoomTypeDescription
	{
		get
		{
			return this._RoomTypeDescription;
		}
		set
		{
			if ((this._RoomTypeDescription != value))
			{
				this.OnRoomTypeDescriptionChanging(value);
				this.SendPropertyChanging();
				this._RoomTypeDescription = value;
				this.SendPropertyChanged("RoomTypeDescription");
				this.OnRoomTypeDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomType_tblRoom", Storage="_tblRooms", ThisKey="RoomTypeID", OtherKey="RoomType")]
	public EntitySet<tblRoom> tblRooms
	{
		get
		{
			return this._tblRooms;
		}
		set
		{
			this._tblRooms.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblRooms(tblRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoomType = this;
	}
	
	private void detach_tblRooms(tblRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblRoomType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblServicesDef")]
public partial class tblServicesDef : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ServiceID;
	
	private string _ServiceDescript;
	
	private string _ServiceDate;
	
	private int _Quantity;
	
	private bool _ExpireBit;
	
	private int _FromCityID;
	
	private int _ToCityID;
	
	private decimal _UnitTicketPrice;
	
	private EntitySet<tblRezerveTicket> _tblRezerveTickets;
	
	private EntityRef<tblCountryCity> _tblCountryCity;
	
	private EntityRef<tblCountryCity> _tblCountryCity1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnServiceDescriptChanging(string value);
    partial void OnServiceDescriptChanged();
    partial void OnServiceDateChanging(string value);
    partial void OnServiceDateChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnExpireBitChanging(bool value);
    partial void OnExpireBitChanged();
    partial void OnFromCityIDChanging(int value);
    partial void OnFromCityIDChanged();
    partial void OnToCityIDChanging(int value);
    partial void OnToCityIDChanged();
    partial void OnUnitTicketPriceChanging(decimal value);
    partial void OnUnitTicketPriceChanged();
    #endregion
	
	public tblServicesDef()
	{
		this._tblRezerveTickets = new EntitySet<tblRezerveTicket>(new Action<tblRezerveTicket>(this.attach_tblRezerveTickets), new Action<tblRezerveTicket>(this.detach_tblRezerveTickets));
		this._tblCountryCity = default(EntityRef<tblCountryCity>);
		this._tblCountryCity1 = default(EntityRef<tblCountryCity>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ServiceID
	{
		get
		{
			return this._ServiceID;
		}
		set
		{
			if ((this._ServiceID != value))
			{
				this.OnServiceIDChanging(value);
				this.SendPropertyChanging();
				this._ServiceID = value;
				this.SendPropertyChanged("ServiceID");
				this.OnServiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string ServiceDescript
	{
		get
		{
			return this._ServiceDescript;
		}
		set
		{
			if ((this._ServiceDescript != value))
			{
				this.OnServiceDescriptChanging(value);
				this.SendPropertyChanging();
				this._ServiceDescript = value;
				this.SendPropertyChanged("ServiceDescript");
				this.OnServiceDescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string ServiceDate
	{
		get
		{
			return this._ServiceDate;
		}
		set
		{
			if ((this._ServiceDate != value))
			{
				this.OnServiceDateChanging(value);
				this.SendPropertyChanging();
				this._ServiceDate = value;
				this.SendPropertyChanged("ServiceDate");
				this.OnServiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireBit", DbType="Bit NOT NULL")]
	public bool ExpireBit
	{
		get
		{
			return this._ExpireBit;
		}
		set
		{
			if ((this._ExpireBit != value))
			{
				this.OnExpireBitChanging(value);
				this.SendPropertyChanging();
				this._ExpireBit = value;
				this.SendPropertyChanged("ExpireBit");
				this.OnExpireBitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCityID", DbType="Int NOT NULL")]
	public int FromCityID
	{
		get
		{
			return this._FromCityID;
		}
		set
		{
			if ((this._FromCityID != value))
			{
				if (this._tblCountryCity.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFromCityIDChanging(value);
				this.SendPropertyChanging();
				this._FromCityID = value;
				this.SendPropertyChanged("FromCityID");
				this.OnFromCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCityID", DbType="Int NOT NULL")]
	public int ToCityID
	{
		get
		{
			return this._ToCityID;
		}
		set
		{
			if ((this._ToCityID != value))
			{
				if (this._tblCountryCity1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnToCityIDChanging(value);
				this.SendPropertyChanging();
				this._ToCityID = value;
				this.SendPropertyChanged("ToCityID");
				this.OnToCityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTicketPrice", DbType="Decimal(18,0) NOT NULL")]
	public decimal UnitTicketPrice
	{
		get
		{
			return this._UnitTicketPrice;
		}
		set
		{
			if ((this._UnitTicketPrice != value))
			{
				this.OnUnitTicketPriceChanging(value);
				this.SendPropertyChanging();
				this._UnitTicketPrice = value;
				this.SendPropertyChanged("UnitTicketPrice");
				this.OnUnitTicketPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblServicesDef_tblRezerveTicket", Storage="_tblRezerveTickets", ThisKey="ServiceID", OtherKey="ServiceID")]
	public EntitySet<tblRezerveTicket> tblRezerveTickets
	{
		get
		{
			return this._tblRezerveTickets;
		}
		set
		{
			this._tblRezerveTickets.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCountryCity_tblServicesDef", Storage="_tblCountryCity", ThisKey="FromCityID", OtherKey="CountryCityID", IsForeignKey=true)]
	public tblCountryCity tblCountryCity
	{
		get
		{
			return this._tblCountryCity.Entity;
		}
		set
		{
			tblCountryCity previousValue = this._tblCountryCity.Entity;
			if (((previousValue != value) 
						|| (this._tblCountryCity.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblCountryCity.Entity = null;
					previousValue.tblServicesDefs.Remove(this);
				}
				this._tblCountryCity.Entity = value;
				if ((value != null))
				{
					value.tblServicesDefs.Add(this);
					this._FromCityID = value.CountryCityID;
				}
				else
				{
					this._FromCityID = default(int);
				}
				this.SendPropertyChanged("tblCountryCity");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCountryCity_tblServicesDef1", Storage="_tblCountryCity1", ThisKey="ToCityID", OtherKey="CountryCityID", IsForeignKey=true)]
	public tblCountryCity tblCountryCity1
	{
		get
		{
			return this._tblCountryCity1.Entity;
		}
		set
		{
			tblCountryCity previousValue = this._tblCountryCity1.Entity;
			if (((previousValue != value) 
						|| (this._tblCountryCity1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblCountryCity1.Entity = null;
					previousValue.tblServicesDefs1.Remove(this);
				}
				this._tblCountryCity1.Entity = value;
				if ((value != null))
				{
					value.tblServicesDefs1.Add(this);
					this._ToCityID = value.CountryCityID;
				}
				else
				{
					this._ToCityID = default(int);
				}
				this.SendPropertyChanged("tblCountryCity1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblRezerveTickets(tblRezerveTicket entity)
	{
		this.SendPropertyChanging();
		entity.tblServicesDef = this;
	}
	
	private void detach_tblRezerveTickets(tblRezerveTicket entity)
	{
		this.SendPropertyChanging();
		entity.tblServicesDef = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers")]
public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private string _UserName;
	
	private string _UsePassChar;
	
	private string _NameCS;
	
	private string _SnameCS;
	
	private string _Phone;
	
	private string _Mobile;
	
	private System.Nullable<int> _UserTypeID;
	
	private string _UserMail;
	
	private string _UserWebSite;
	
	private EntitySet<tblCustomerPayment> _tblCustomerPayments;
	
	private EntitySet<tblEECus> _tblEECus;
	
	private EntitySet<tblRezerveRoom> _tblRezerveRooms;
	
	private EntitySet<tblRezerveTicket> _tblRezerveTickets;
	
	private EntityRef<tblUserType> _tblUserType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUsePassCharChanging(string value);
    partial void OnUsePassCharChanged();
    partial void OnNameCSChanging(string value);
    partial void OnNameCSChanged();
    partial void OnSnameCSChanging(string value);
    partial void OnSnameCSChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnUserTypeIDChanging(System.Nullable<int> value);
    partial void OnUserTypeIDChanged();
    partial void OnUserMailChanging(string value);
    partial void OnUserMailChanged();
    partial void OnUserWebSiteChanging(string value);
    partial void OnUserWebSiteChanged();
    #endregion
	
	public tblUser()
	{
		this._tblCustomerPayments = new EntitySet<tblCustomerPayment>(new Action<tblCustomerPayment>(this.attach_tblCustomerPayments), new Action<tblCustomerPayment>(this.detach_tblCustomerPayments));
		this._tblEECus = new EntitySet<tblEECus>(new Action<tblEECus>(this.attach_tblEECus), new Action<tblEECus>(this.detach_tblEECus));
		this._tblRezerveRooms = new EntitySet<tblRezerveRoom>(new Action<tblRezerveRoom>(this.attach_tblRezerveRooms), new Action<tblRezerveRoom>(this.detach_tblRezerveRooms));
		this._tblRezerveTickets = new EntitySet<tblRezerveTicket>(new Action<tblRezerveTicket>(this.attach_tblRezerveTickets), new Action<tblRezerveTicket>(this.detach_tblRezerveTickets));
		this._tblUserType = default(EntityRef<tblUserType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePassChar", DbType="NVarChar(150)")]
	public string UsePassChar
	{
		get
		{
			return this._UsePassChar;
		}
		set
		{
			if ((this._UsePassChar != value))
			{
				this.OnUsePassCharChanging(value);
				this.SendPropertyChanging();
				this._UsePassChar = value;
				this.SendPropertyChanged("UsePassChar");
				this.OnUsePassCharChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCS", DbType="NVarChar(100)")]
	public string NameCS
	{
		get
		{
			return this._NameCS;
		}
		set
		{
			if ((this._NameCS != value))
			{
				this.OnNameCSChanging(value);
				this.SendPropertyChanging();
				this._NameCS = value;
				this.SendPropertyChanged("NameCS");
				this.OnNameCSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnameCS", DbType="NVarChar(150)")]
	public string SnameCS
	{
		get
		{
			return this._SnameCS;
		}
		set
		{
			if ((this._SnameCS != value))
			{
				this.OnSnameCSChanging(value);
				this.SendPropertyChanging();
				this._SnameCS = value;
				this.SendPropertyChanged("SnameCS");
				this.OnSnameCSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(150)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(150)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int")]
	public System.Nullable<int> UserTypeID
	{
		get
		{
			return this._UserTypeID;
		}
		set
		{
			if ((this._UserTypeID != value))
			{
				if (this._tblUserType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserTypeIDChanging(value);
				this.SendPropertyChanging();
				this._UserTypeID = value;
				this.SendPropertyChanged("UserTypeID");
				this.OnUserTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMail", DbType="NVarChar(100)")]
	public string UserMail
	{
		get
		{
			return this._UserMail;
		}
		set
		{
			if ((this._UserMail != value))
			{
				this.OnUserMailChanging(value);
				this.SendPropertyChanging();
				this._UserMail = value;
				this.SendPropertyChanged("UserMail");
				this.OnUserMailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserWebSite", DbType="NVarChar(100)")]
	public string UserWebSite
	{
		get
		{
			return this._UserWebSite;
		}
		set
		{
			if ((this._UserWebSite != value))
			{
				this.OnUserWebSiteChanging(value);
				this.SendPropertyChanging();
				this._UserWebSite = value;
				this.SendPropertyChanged("UserWebSite");
				this.OnUserWebSiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblCustomerPayment", Storage="_tblCustomerPayments", ThisKey="UserID", OtherKey="CustomerUserID")]
	public EntitySet<tblCustomerPayment> tblCustomerPayments
	{
		get
		{
			return this._tblCustomerPayments;
		}
		set
		{
			this._tblCustomerPayments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblEECus", Storage="_tblEECus", ThisKey="UserID", OtherKey="CustomerID")]
	public EntitySet<tblEECus> tblEECus
	{
		get
		{
			return this._tblEECus;
		}
		set
		{
			this._tblEECus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblRezerveRoom", Storage="_tblRezerveRooms", ThisKey="UserID", OtherKey="CustomerID")]
	public EntitySet<tblRezerveRoom> tblRezerveRooms
	{
		get
		{
			return this._tblRezerveRooms;
		}
		set
		{
			this._tblRezerveRooms.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblRezerveTicket", Storage="_tblRezerveTickets", ThisKey="UserID", OtherKey="RezerverID")]
	public EntitySet<tblRezerveTicket> tblRezerveTickets
	{
		get
		{
			return this._tblRezerveTickets;
		}
		set
		{
			this._tblRezerveTickets.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserType_tblUser", Storage="_tblUserType", ThisKey="UserTypeID", OtherKey="UsertypeID", IsForeignKey=true)]
	public tblUserType tblUserType
	{
		get
		{
			return this._tblUserType.Entity;
		}
		set
		{
			tblUserType previousValue = this._tblUserType.Entity;
			if (((previousValue != value) 
						|| (this._tblUserType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblUserType.Entity = null;
					previousValue.tblUsers.Remove(this);
				}
				this._tblUserType.Entity = value;
				if ((value != null))
				{
					value.tblUsers.Add(this);
					this._UserTypeID = value.UsertypeID;
				}
				else
				{
					this._UserTypeID = default(Nullable<int>);
				}
				this.SendPropertyChanged("tblUserType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblCustomerPayments(tblCustomerPayment entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = this;
	}
	
	private void detach_tblCustomerPayments(tblCustomerPayment entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = null;
	}
	
	private void attach_tblEECus(tblEECus entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = this;
	}
	
	private void detach_tblEECus(tblEECus entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = null;
	}
	
	private void attach_tblRezerveRooms(tblRezerveRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = this;
	}
	
	private void detach_tblRezerveRooms(tblRezerveRoom entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = null;
	}
	
	private void attach_tblRezerveTickets(tblRezerveTicket entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = this;
	}
	
	private void detach_tblRezerveTickets(tblRezerveTicket entity)
	{
		this.SendPropertyChanging();
		entity.tblUser = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserTypes")]
public partial class tblUserType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UsertypeID;
	
	private string _UserTypeDescription;
	
	private EntitySet<tblUser> _tblUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsertypeIDChanging(int value);
    partial void OnUsertypeIDChanged();
    partial void OnUserTypeDescriptionChanging(string value);
    partial void OnUserTypeDescriptionChanged();
    #endregion
	
	public tblUserType()
	{
		this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsertypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UsertypeID
	{
		get
		{
			return this._UsertypeID;
		}
		set
		{
			if ((this._UsertypeID != value))
			{
				this.OnUsertypeIDChanging(value);
				this.SendPropertyChanging();
				this._UsertypeID = value;
				this.SendPropertyChanged("UsertypeID");
				this.OnUsertypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UserTypeDescription
	{
		get
		{
			return this._UserTypeDescription;
		}
		set
		{
			if ((this._UserTypeDescription != value))
			{
				this.OnUserTypeDescriptionChanging(value);
				this.SendPropertyChanging();
				this._UserTypeDescription = value;
				this.SendPropertyChanged("UserTypeDescription");
				this.OnUserTypeDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserType_tblUser", Storage="_tblUsers", ThisKey="UsertypeID", OtherKey="UserTypeID")]
	public EntitySet<tblUser> tblUsers
	{
		get
		{
			return this._tblUsers;
		}
		set
		{
			this._tblUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblUsers(tblUser entity)
	{
		this.SendPropertyChanging();
		entity.tblUserType = this;
	}
	
	private void detach_tblUsers(tblUser entity)
	{
		this.SendPropertyChanging();
		entity.tblUserType = null;
	}
}
#pragma warning restore 1591
